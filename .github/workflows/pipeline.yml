name: Deployment Pipeline
run-name: Running ID [${{github.run_id}}] By [${{ github.actor }}] Deployment GitHub Actions ðŸš€

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

on:
  push:
    branches: [main]

jobs:

  setup:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Git Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.17.x

      - name: Setup Angular CLI
        run: npm install -g @angular/cli

      - name: Get npm cache directory
        id: npm-cache-dir
        shell: pwsh
        run: echo "dir=$(npm config get cache)" >> ${env:GITHUB_OUTPUT}

      - name: Save Cache global node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-global-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

  install:
    runs-on: ubuntu-22.04
    needs: [setup]
    steps:
      - name: Checkout Git Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.17.x

      - name: Get npm cache directory
        id: npm-cache-dir
        shell: pwsh
        run: echo "dir=$(npm config get cache)" >> ${env:GITHUB_OUTPUT}

      - name: Restore Cache global node_modules
        uses: actions/cache/restore@v3
        env:
          cache-name: cache-global-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install Dependencies
        run: npm ci

  build:
    runs-on: ubuntu-22.04
    needs: [install]
    steps:
      - name: Checkout Git Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.17.x

      - name: Get npm cache directory
        id: npm-cache-dir
        shell: pwsh
        run: echo "dir=$(npm config get cache)" >> ${env:GITHUB_OUTPUT}

      - name: Restore Cache global node modules
        uses: actions/cache/restore@v3
        env:
          cache-name: cache-global-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - name: Build App
        run: npm run build


  deploy:
    runs-on: ubuntu-22.04
    # if: ${{ always() }}
    needs: [build]
    steps:

      - name: Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.12.13
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
          heroku_email: ${{secrets.HEROKU_USER_EMAIL}}
